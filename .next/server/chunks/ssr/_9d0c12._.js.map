{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/jackcoleman/Developer/HashCalls/hackathon-options/src/app/page.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport walletConnectFcn from \"./components/hedera/walletConnect.js\";\nimport \"./styles/App.css\";\nimport { buyOption, writeOption, exerciseOption } from \"./api/actions.js\";\nimport signTx from \"./components/hedera/signTx.js\";\n\nexport default function Home() {\n  // State for connected wallet\n  const [walletData, setWalletData] = useState();\n  const [accountId, setAccountId] = useState();\n  const [connectTextSt, setConnectTextSt] = useState(\"ðŸ”Œ Connect here...\");\n  const [connectLinkSt, setConnectLinkSt] = useState(\"\");\n\n  // Unified state for options\n  const [options, setOptions] = useState([]);\n  const [token, setToken] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [premium, setPremium] = useState(\"\");\n  const [strike, setStrike] = useState(\"\");\n  const [expiry, setExpiry] = useState(\"\");\n  const [isCall, setIsCall] = useState(true); // Tracks whether adding a call or put\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(\"\");\n\n  async function connectWallet() {\n    if (accountId) {\n      setConnectTextSt(`ðŸ”Œ Account ${accountId} already connected âš¡ âœ…`);\n    } else {\n      const wData = await walletConnectFcn();\n      wData[0].pairingEvent.once((pairingData) => {\n        pairingData.accountIds.forEach((id) => {\n          setAccountId(id);\n          console.log(`- Paired account id: ${id}`);\n          setConnectTextSt(`ðŸ”Œ Account ${id} connected âš¡ âœ…`);\n          setConnectLinkSt(`https://hashscan.io/#/testnet/account/${id}`);\n        });\n      });\n      setWalletData(wData);\n    }\n  }\n\n  async function addOption() {\n\n    const writerNftSerial = await writeOption(accountId, token, amount, strike, isCall);\n\n    // Retrieve the signer\n    const hashconnect = walletData[0];\n    const saveData = walletData[1];\n    const provider = hashconnect.getProvider(\n      \"testnet\",\n      saveData.topic,\n      accountId\n    );\n    const signer = hashconnect.getSigner(provider);\n\n    const transferReceipt = await signTx(writerNftSerial.data.signedTx, signer, writerNftSerial.data.metadata, provider);\n    console.log(\"Transfer receipt:\", transferReceipt);\n\n    const newOption = {\n      token,\n      amount,\n      premium,\n      strike,\n      expiry,\n      buyerNftSerial: null,\n      writerNftSerial,\n      isCall,\n    };\n\n    const updatedOptions = [...options, newOption];\n    setOptions(updatedOptions);\n\n    console.log(\"Current Options:\", updatedOptions);\n\n    // Clear input fields\n    setToken(\"\");\n    setAmount(\"\");\n    setPremium(\"\");\n    setStrike(\"\");\n    setExpiry(\"\");\n  }\n\n  async function buyOptionFnc() {\n    if (selectedOptionIndex === \"\") {\n      alert(\"Please select an option to buy.\");\n      return;\n    }\n\n    const index = parseInt(selectedOptionIndex, 10);\n    const selectedOption = options[index];\n    console.log(\"Selected Option:\", selectedOption);\n\n    const serialNumber = await buyOption(\n      walletData,\n      accountId,\n      selectedOption.premium,\n      selectedOption.writerNftSerial\n    );\n\n    const updatedOptions = [...options];\n    updatedOptions[index] = {\n      ...selectedOption,\n      buyerNftSerial: serialNumber,\n    };\n\n    setOptions(updatedOptions);\n\n    console.log(\"Updated Options:\", updatedOptions);\n  }\n\n  async function exerciseOptionFnc() {\n    if (selectedOptionIndex === \"\") {\n      alert(\"Please select an option to exercise.\");\n      return;\n    }\n\n    const index = parseInt(selectedOptionIndex, 10);\n    const selectedOption = options[index];\n\n    const currentTime = new Date().toISOString();\n    if (currentTime > selectedOption.expiry) {\n      alert(\"This option has expired.\");\n      return;\n    }\n\n    try {\n      await exerciseOption(\n        walletData,\n        selectedOption.token,\n        selectedOption.buyerNftSerial,\n        accountId,\n        selectedOption.strike,\n        selectedOption.amount,\n        selectedOption.writerNftSerial,\n        isCall\n      );\n\n\n      const updatedOptions = options.filter((_, idx) => idx !== index);\n      setOptions(updatedOptions);\n\n      alert(\"Option exercised successfully!\");\n      console.log(\"Updated Options:\", updatedOptions);\n    } catch (error) {\n      console.error(\"Error exercising option:\", error);\n      alert(\"An error occurred while exercising the option.\");\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"header\">HASHCALLS</h1>\n      <div>\n        <button onClick={connectWallet} className=\"cta-button\">\n          {connectTextSt}\n        </button>\n        {connectLinkSt && (\n          <a href={connectLinkSt} target=\"_blank\" rel=\"noreferrer\">\n            View on HashScan\n          </a>\n        )}\n      </div>\n\n      <div>\n        <h2>Create an Option</h2>\n        <div>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"optionType\"\n              value=\"call\"\n              checked={isCall}\n              onChange={() => setIsCall(true)}\n            />\n            Call\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"optionType\"\n              value=\"put\"\n              checked={!isCall}\n              onChange={() => setIsCall(false)}\n            />\n            Put\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"token\">Token: </label>\n          <input\n            id=\"token\"\n            type=\"text\"\n            value={token}\n            onChange={(e) => setToken(e.target.value)}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"amount\">Amount: </label>\n          <input\n            id=\"amount\"\n            type=\"number\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"premium\">Premium: </label>\n          <input\n            id=\"premium\"\n            type=\"number\"\n            value={premium}\n            onChange={(e) => setPremium(e.target.value)}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"strike\">Strike Price: </label>\n          <input\n            id=\"strike\"\n            type=\"number\"\n            value={strike}\n            onChange={(e) => setStrike(e.target.value)}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"expiry\">Expiry Date: </label>\n          <input\n            id=\"expiry\"\n            type=\"datetime-local\"\n            value={expiry}\n            onChange={(e) => setExpiry(e.target.value)}\n          />\n        </div>\n        <button onClick={addOption}>Add Option</button>\n      </div>\n\n      <div>\n        <h2>Buy an Option</h2>\n        <div>\n          <label htmlFor=\"options\">Select Option: </label>\n          <select\n            id=\"options\"\n            value={selectedOptionIndex}\n            onChange={(e) => setSelectedOptionIndex(e.target.value)}\n          >\n            <option value=\"\">-- Select an Option --</option>\n            {options.map((option, index) => (\n              <option key={index} value={index}>\n                {option.isCall ? \"Call\" : \"Put\"} Option {index + 1} - Token:{\" \"}\n                {option.token}, Amount: {option.amount}\n              </option>\n            ))}\n          </select>\n        </div>\n        <button onClick={buyOptionFnc}>Buy Option</button>\n      </div>\n\n      <div>\n        <h2>Exercise an Option</h2>\n        <div>\n          <label htmlFor=\"owned-options\">Select Owned Option: </label>\n          <select\n            id=\"owned-options\"\n            value={selectedOptionIndex}\n            onChange={(e) => setSelectedOptionIndex(e.target.value)}\n          >\n            <option value=\"\">-- Select an Option --</option>\n            {options.map((option, index) => (\n              <option key={index} value={index}>\n                {option.isCall ? \"Call\" : \"Put\"} Option {index + 1} - Token:{\" \"}\n                {option.token}, Amount: {option.amount}\n              </option>\n            ))}\n          </select>\n        </div>\n        <button onClick={exerciseOptionFnc}>Exercise Option</button>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMe,SAAS;IACtB,6BAA6B;IAC7B,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD;IAC3C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD;IACzC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnD,4BAA4B;IAC5B,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,OAAO,sCAAsC;IAClF,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE/D,eAAe;QACb,IAAI,WAAW;YACb,iBAAiB,CAAC,WAAW,EAAE,UAAU,sBAAsB,CAAC;QAClE,OAAO;YACL,MAAM,QAAQ,MAAM;YACpB,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;gBAC1B,YAAY,UAAU,CAAC,OAAO,CAAC,CAAC;oBAC9B,aAAa;oBACb,QAAQ,GAAG,CAAC,CAAC,qBAAqB,EAAE,IAAI;oBACxC,iBAAiB,CAAC,WAAW,EAAE,GAAG,cAAc,CAAC;oBACjD,iBAAiB,CAAC,sCAAsC,EAAE,IAAI;gBAChE;YACF;YACA,cAAc;QAChB;IACF;IAEA,eAAe;QAEb,MAAM,kBAAkB,MAAM,YAAY,WAAW,OAAO,QAAQ,QAAQ;QAE5E,sBAAsB;QACtB,MAAM,cAAc,UAAU,CAAC,EAAE;QACjC,MAAM,WAAW,UAAU,CAAC,EAAE;QAC9B,MAAM,WAAW,YAAY,WAAW,CACtC,WACA,SAAS,KAAK,EACd;QAEF,MAAM,SAAS,YAAY,SAAS,CAAC;QAErC,MAAM,kBAAkB,MAAM,OAAO,gBAAgB,IAAI,CAAC,QAAQ,EAAE,QAAQ,gBAAgB,IAAI,CAAC,QAAQ,EAAE;QAC3G,QAAQ,GAAG,CAAC,qBAAqB;QAEjC,MAAM,YAAY;YAChB;YACA;YACA;YACA;YACA;YACA,gBAAgB;YAChB;YACA;QACF;QAEA,MAAM,iBAAiB;eAAI;YAAS;SAAU;QAC9C,WAAW;QAEX,QAAQ,GAAG,CAAC,oBAAoB;QAEhC,qBAAqB;QACrB,SAAS;QACT,UAAU;QACV,WAAW;QACX,UAAU;QACV,UAAU;IACZ;IAEA,eAAe;QACb,IAAI,wBAAwB,IAAI;YAC9B,MAAM;YACN;QACF;QAEA,MAAM,QAAQ,SAAS,qBAAqB;QAC5C,MAAM,iBAAiB,OAAO,CAAC,MAAM;QACrC,QAAQ,GAAG,CAAC,oBAAoB;QAEhC,MAAM,eAAe,MAAM,UACzB,YACA,WACA,eAAe,OAAO,EACtB,eAAe,eAAe;QAGhC,MAAM,iBAAiB;eAAI;SAAQ;QACnC,cAAc,CAAC,MAAM,GAAG;YACtB,GAAG,cAAc;YACjB,gBAAgB;QAClB;QAEA,WAAW;QAEX,QAAQ,GAAG,CAAC,oBAAoB;IAClC;IAEA,eAAe;QACb,IAAI,wBAAwB,IAAI;YAC9B,MAAM;YACN;QACF;QAEA,MAAM,QAAQ,SAAS,qBAAqB;QAC5C,MAAM,iBAAiB,OAAO,CAAC,MAAM;QAErC,MAAM,cAAc,IAAI,OAAO,WAAW;QAC1C,IAAI,cAAc,eAAe,MAAM,EAAE;YACvC,MAAM;YACN;QACF;QAEA,IAAI;YACF,MAAM,eACJ,YACA,eAAe,KAAK,EACpB,eAAe,cAAc,EAC7B,WACA,eAAe,MAAM,EACrB,eAAe,MAAM,EACrB,eAAe,eAAe,EAC9B;YAIF,MAAM,iBAAiB,QAAQ,MAAM,CAAC,CAAC,GAAG,MAAQ,QAAQ;YAC1D,WAAW;YAEX,MAAM;YACN,QAAQ,GAAG,CAAC,oBAAoB;QAClC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,MAAM;QACR;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAS;;;;;;0BACvB,8OAAC;;kCACC,8OAAC;wBAAO,SAAS;wBAAe,WAAU;kCACvC;;;;;;oBAEF,+BACC,8OAAC;wBAAE,MAAM;wBAAe,QAAO;wBAAS,KAAI;kCAAa;;;;;;;;;;;;0BAM7D,8OAAC;;kCACC,8OAAC;kCAAG;;;;;;kCACJ,8OAAC;;0CACC,8OAAC;;kDACC,8OAAC;wCACC,MAAK;wCACL,MAAK;wCACL,OAAM;wCACN,SAAS;wCACT,UAAU,IAAM,UAAU;;;;;;oCAC1B;;;;;;;0CAGJ,8OAAC;;kDACC,8OAAC;wCACC,MAAK;wCACL,MAAK;wCACL,OAAM;wCACN,SAAS,CAAC;wCACV,UAAU,IAAM,UAAU;;;;;;oCAC1B;;;;;;;;;;;;;kCAIN,8OAAC;;0CACC,8OAAC;gCAAM,SAAQ;0CAAQ;;;;;;0CACvB,8OAAC;gCACC,IAAG;gCACH,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;kCAG5C,8OAAC;;0CACC,8OAAC;gCAAM,SAAQ;0CAAS;;;;;;0CACxB,8OAAC;gCACC,IAAG;gCACH,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,UAAU,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;kCAG7C,8OAAC;;0CACC,8OAAC;gCAAM,SAAQ;0CAAU;;;;;;0CACzB,8OAAC;gCACC,IAAG;gCACH,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;kCAG9C,8OAAC;;0CACC,8OAAC;gCAAM,SAAQ;0CAAS;;;;;;0CACxB,8OAAC;gCACC,IAAG;gCACH,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,UAAU,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;kCAG7C,8OAAC;;0CACC,8OAAC;gCAAM,SAAQ;0CAAS;;;;;;0CACxB,8OAAC;gCACC,IAAG;gCACH,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,UAAU,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;kCAG7C,8OAAC;wBAAO,SAAS;kCAAW;;;;;;;;;;;;0BAG9B,8OAAC;;kCACC,8OAAC;kCAAG;;;;;;kCACJ,8OAAC;;0CACC,8OAAC;gCAAM,SAAQ;0CAAU;;;;;;0CACzB,8OAAC;gCACC,IAAG;gCACH,OAAO;gCACP,UAAU,CAAC,IAAM,uBAAuB,EAAE,MAAM,CAAC,KAAK;;kDAEtD,8OAAC;wCAAO,OAAM;kDAAG;;;;;;oCAChB,QAAQ,GAAG,CAAC,CAAC,QAAQ,sBACpB,8OAAC;4CAAmB,OAAO;;gDACxB,OAAO,MAAM,GAAG,SAAS;gDAAM;gDAAS,QAAQ;gDAAE;gDAAU;gDAC5D,OAAO,KAAK;gDAAC;gDAAW,OAAO,MAAM;;2CAF3B;;;;;;;;;;;;;;;;;kCAOnB,8OAAC;wBAAO,SAAS;kCAAc;;;;;;;;;;;;0BAGjC,8OAAC;;kCACC,8OAAC;kCAAG;;;;;;kCACJ,8OAAC;;0CACC,8OAAC;gCAAM,SAAQ;0CAAgB;;;;;;0CAC/B,8OAAC;gCACC,IAAG;gCACH,OAAO;gCACP,UAAU,CAAC,IAAM,uBAAuB,EAAE,MAAM,CAAC,KAAK;;kDAEtD,8OAAC;wCAAO,OAAM;kDAAG;;;;;;oCAChB,QAAQ,GAAG,CAAC,CAAC,QAAQ,sBACpB,8OAAC;4CAAmB,OAAO;;gDACxB,OAAO,MAAM,GAAG,SAAS;gDAAM;gDAAS,QAAQ;gDAAE;gDAAU;gDAC5D,OAAO,KAAK;gDAAC;gDAAW,OAAO,MAAM;;2CAF3B;;;;;;;;;;;;;;;;;kCAOnB,8OAAC;wBAAO,SAAS;kCAAmB;;;;;;;;;;;;;;;;;;AAI5C"}},
    {"offset": {"line": 539, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 550, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 550, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 556, "column": 0}, "map": {"version":3,"sources":["file:///Users/jackcoleman/Developer/HashCalls/hackathon-options/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AAeA,cAAc;AAdd,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAKzE,SAASE,IAAI,EAAEC,KAAK,GAAE;AAStB,iCAAiC;;;;;;;;AAEjC,OAAO,MAAMG,eAAe,6CAAA;IAC1BC,MAAAA,GAASC;IACTC,EAAAA,OAAAA;IAAAA,CAAWC;IAAAA;QACb,EAAC,UAAA;YAAA;YAAA,CAED;YAAA,WAAc,qCAAoC;gBAElD,UAAA,CAAA;gBAAA,QAAA;oBAAA,IAAA,0BAA4D;oBAAA;iBAAA;YAC5D;SAAA,KAAO,MAAMC,cAAc,IAAIX,mBAAmB;;KAChDY,YAAY;cACVC,IAAAA,EAAMZ;YAAAA,MAAAA,CAAUa,QAAQ;iBACxBC,MAAM,QAAA;wBAAA;4BACNC,KAAAA,CAAAA,GAAAA,2KAAAA,CAAAA,KAAU,iBAAA,EAAA,MAAA,MAAA,MAAA,EAAA,iBAAA,CAAA,CAAA,EAAA,iTAAA,CAAA,UAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA;4BACV,OAAA,GAAA,iTAAA,CAAA,UAAA,CAAA,KAAA,CAA2C,CAAA,EAAA,iTAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BAC3CC,MAAAA,CAAAA,KAAY,OAAA,CAAA;;qBACZC,UAAU;gBACVC,UAAU,EAAE;UACd;QAAA,UAAA;YAAA,IAAA;YAAA;SAAA;UACAC,UAAU,CAAA;YAAA,IAAA;YAAA;SAAA;;OACRC,YAAYnB;IACd,EAAA,QAAA;IAAA;CAAA","ignoreList":[0]}},
    {"offset": {"line": 641, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}